<!-- sdkfdsjfksjf -->
<div className='flex items-center justify-center'>
    <img
      src={heroImg}
      alt='hero-img/img'
      className=' hover:scale-1 duration-75 rounded-lg w-30 h-30 lg:h-[35vh] md:h-[31vh] sm:h-[21vh] xsm:h-[19vh] transitions-theme cursor-pointer object-fill'
    />
  </div>


<!-- ksajfksajfa -->


<div className='grid items-center absolute top-[33vh] lg:top-[27vh] right-0 gap-3 pr-4'>
    {sociallinks?.map((val, i) => (
      <SocialLink
        key={i}
        icon={val.icon}
      />
    ))}
  </div>



  <!-- sfdjlk -->

  <div className='grid items-center gap-5 md:gap-3 absolute top-[44vh] lg:top-[27vh] left-[11%] xl:left-0 w-auto h-auto '>
    {videos?.map((val, i) => (
      <Clips
        key={i}
        imgsrc={val.imgsrc}
        clip={val.clip}
        
      />
    ))}
  </div>

  <!-- dkljfs -->



  <!-- products page -->

  import React , { useState , useEffect } from 'react'
import Hero from '../../components/Hero'
import Sales from '../../components/Sales'
import TopSales from '../../components/TopSales'
import FlexContent from '../../components/FlexContent'
import Footer from '../../components/Footer'
import Cart from '../../components/Cart'
import Navbar from '../../components/Navbar'
import { heroapi , popularsales , highlight ,toprateslaes , footerAPI} from '../../data/data'

// import the useFetch hook 
import { useFetch } from '../../hooks/useFetch'
import { FaSearchDollar } from 'react-icons/fa'
import ScrollToTopButton from '../../components/utils/ScrollButton'
import SideBar from '../../components/SideBar'






const Main = () => {  // get the products from Api 


  // start handel get top product from data base 
  const [ TopProducts , setTopProducts ] = useState([]);
  const { data:d , loading:l, error:e } = useFetch('products?populate=*&filters[isFeatured]=true');

  useEffect(() => {
    if(d) {
      setTopProducts(d);
      console.log(d);
    }
  }, [d]);

  // end handel get top product from data base 


  
  // start  handel get features product from data base 

  const [ products , setProducts ] = useState([]);
  const { data , loading , error } = useFetch('products?populate=*');

  useEffect(() => {
    if(data) {
      setProducts(data);
      console.log(data);
    }
  }, [data]);

  // end  handel get features product from data base 



    if(loading){
      return <h1>Loading ...</h1>
    }

    if(error){
      return <h3> Error : {error.message} </h3>
    }

    
    
  
  
  
      if(e){
        return <h3> Error : {error.message} </h3>
      }
  
  

  return (
    
  <>
  <div className={`app-container`}>
  <Navbar/>
  <Cart/>
  <SideBar/>
      <main className='flex flex-col gap-4'>
      <Hero heroapi={heroapi}/>
      <TopSales TopProducts={TopProducts} ifExists isTop={true}/>
      <Sales products={products} ifExists={false}/>
      <FlexContent endpoint={highlight} ifExists />
      <Footer footerAPI={footerAPI}/>
      </main>
  </div>
  

  <ScrollToTopButton/>

  </>

    
  )
}

export default Main




  <!-- products page  -->

  <section className='relative  w-auto flex flex-col rounded-3xl h-[100vh]  bg-inherit '>
    <div className='bg-theme rounded-t-3xl mt-2 clip-path h-[85vh] lg:h-[75vh] md:h-[65vh] sm:h-[55vh] w-auto absolute top-0 left-0 right-0 opacity-100 z-10 '></div>
      <div className='relative opacity-100 z-20 grid  nike-container'>
      
        <div className='grid items-center justify-items-center  md:mt-10'>
          <h1 className='text-6xl lg:text-5xl md:text-4xl sm:text-3xl xsm:text-2xl font-extrabold filter drop-shadow-sm text-slate-800'>{title}</h1>
          <h1 className='text-6xl lg:text-5xl md:text-4xl sm:text-3xl xsm:text-2xl font-extrabold filter drop-shadow-sm text-slate-200'>{subtitle}</h1>
          <button
          onClick={()=> navigate('products/men')}
          type='button' className='button-theme bg-bSdenim text-lg text-white/100   shadow-dark py-2 rounded-xl  mt-9
          '>Découvrez nos produits</button>
          {/* vedios */}
          <div className='grid items-center absolute top-[33vh] lg:top-[27vh] right-0 gap-3 pr-4'>
            {sociallinks?.map((val, i) => (
              <SocialLink
                key={i}
                icon={val.icon}
              />
            ))}
          </div>

          {/* image */}



        </div>
        
      </div>
    </section>


  <!-- the last hero section from nike  -->

    <!-- form -->


    <form onSubmit={handleSubmit} className='flex w-[300px] flex-col gap-5'>
      <div className="">
        
        <input
        className="w-[300px] border-b-[1px] text-center tracking-widest text-white bg-transparent py-3 placeholder-white outline-none border-slate-100 text-md bg-bSlight"
          type="text"
          id="name"
          placeholder="Nom"
          value={name}
          onChange={(e) => setName(e.target.value)}
          required
        />
      </div>       

      <div className="">
        
        <input
        className="w-[300px] border-b-[1px] text-center tracking-widest text-white py-3
        focus:placeholder-shown:border
        
        placeholder-white outline-none border-slate-100 text-md bg-bSlight bg-transparent"
          type="text"
          placeholder="Ville"
          id="city"
          value={city}
          onChange={(e) => setCity(e.target.value)}
          required
        />
      </div> 

      <div>
        
        <input
        className="w-[300px] border-b-[1px] text-center tracking-widest text-white bg-transparent py-3 placeholder-white outline-none border-slate-100 text-md bg-bSlight"
          type="tel"
          placeholder="Numéro de téléphone"
          id="phoneNumber"
          value={phoneNumber}
          onChange={(e) => setPhoneNumber(e.target.value)}
          required
        />
      </div>


      <button type="submit"  className='text-black font-medium text-[20px] rounded-xl bg-green-800 cursor-pointer py-3'
      >Valider la commande</button>

    </form>



    <!-- form -->

    <div class="relative w-full min-w-[200px] h-10">
      <input
      type="tel"
          placeholder="Numéro de téléphone"
          id="phoneNumber"
          value={phoneNumber}
          onChange={(e) => setPhoneNumber(e.target.value)}
          required

        className="peer w-full h-full bg-transparent text-blue-gray-700 font-sans font-normal outline outline-0
         focus:outline-0 disabled:bg-blue-gray-50 disabled:border-0 transition-all placeholder-shown:border
          placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 border focus:border-2
           border-t-transparent focus:border-t-transparent text-sm px-3 py-2.5 rounded-[7px] border-blue-gray-200 focus:border-blue-500"
        placeholder=" " /><label
        className="flex w-full h-full select-none pointer-events-none absolute left-0 font-normal !overflow-visible
         truncate peer-placeholder-shown:text-blue-gray-500 leading-tight peer-focus:leading-tight peer-disabled:text-transparent
          peer-disabled:peer-placeholder-shown:text-blue-gray-500 transition-all -top-1.5 peer-placeholder-shown:text-sm text-[11px]
           peer-focus:text-[11px] before:content[' '] before:block before:box-border before:w-2.5 before:h-1.5 before:mt-[6.5px] before:mr-1
            peer-placeholder-shown:before:border-transparent before:rounded-tl-md before:border-t peer-focus:before:border-t-2 before:border-l 
            peer-focus:before:border-l-2 before:pointer-events-none before:transition-all peer-disabled:before:border-transparent after:content[' '] 
            after:block after:flex-grow after:box-border after:w-2.5 after:h-1.5 after:mt-[6.5px] after:ml-1 peer-placeholder-shown:after:border-transparent 
            after:rounded-tr-md after:border-t peer-focus:after:border-t-2 after:border-r peer-focus:after:border-r-2 after:pointer-events-none
             after:transition-all peer-disabled:after:border-transparent peer-placeholder-shown:leading-[3.75] text-blue-gray-400 peer-focus:text-blue-500 
             before:border-blue-gray-200 peer-focus:before:!border-blue-500 after:border-blue-gray-200 peer-focus:after:!border-blue-500">Input
        Blue
      </label>
    </div>



    <!-- cherti store location  -->

    <div style="width: 100%"><iframe width="100%" height="300" frameborder="0" scrolling="no" marginheight="0"
       marginwidth="0" src="https://maps.google.com/maps?width=100%25&amp;height=300&amp;hl=en&amp;q=Ave%20Allal%20Ben%20Abdellah%20%C3%A0%20cot%C3%A9%20de%20Caf%C3%A9%20(The%20Lost%20F%C3%A8s)%20,%20F%C3%A8s+(cherti%20store%20location)&amp;t=k&amp;z=14&amp;ie=UTF8&amp;iwloc=B&amp;output=embed"><a href="https://www.maps.ie/population/">
        Calculate population in area</a></iframe></div>

        <!-- end chertie store location  -->